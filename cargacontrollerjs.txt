const { Carga } = require("../models");

const endpointsFunction = {};

endpointsFunction.getAllCargas = async (req, res) => {
  try {
    const dados = await Carga.findAll({
        include: 'veiculo_carga'
    });

    res.status(200).json({
      status: "success",
      message: "Lista de cargas.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao listar cargas.",
      data: null,
    });
  }
};

endpointsFunction.createCarga = async (req, res) => {
  const { veiculo, tipo_de_carga, peso, local_origem, local_destino, data_carga, frequencia } = req.body;
  console.log( veiculo, tipo_de_carga, peso, local_origem, local_destino, data_carga, frequencia );
  try {
    const dados = await Carga.create({
      veiculo: veiculo,
      tipo_de_carga: tipo_de_carga,
      peso: peso,
      local_origem: local_origem,
      local_destino: local_destino,
      data_carga: data_carga,
      frequencia: frequencia
    });

    res.status(201).json({
      status: "success",
      message: "Carga criada com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(404).json({
      status: "error",
      message: "Ocorreu um erro ao criar carga.",
      data: null,
    });
  }
};

endpointsFunction.getCargaById = async (req, res) => {
  const { id } = req.params;
  try {
    const dados = await Carga.findOne({
      where: { id: id },
      include: 'veiculo_carga'
    });
    if (!dados) {
      return res.status(404).json({
        status: "error",
        message: "Carga não encontrada.",
      });
    }

    res.status(200).json({
      status: "success",
      message: "Carga encontrada com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao listar carga.",
      data: null,
    });
  }
};

endpointsFunction.updateCarga = async (req, res) => {
  const { id } = req.params;
  const { veiculo, tipo_de_carga, peso, local_origem, local_destino, data_carga, frequencia } = req.body;

  try {
    const dados = await Carga.update(
      {
        veiculo: veiculo,
        tipo_de_carga: tipo_de_carga,
        peso: peso,
        local_origem: local_origem,
        local_destino: local_destino,
        data_carga: data_carga,
        frequencia: frequencia
      },
      {
        where: { id: id },
      }
    );
    if (!dados) {
      return res.status(404).json({
        status: "error",
        message: "Carga não encontrada.",
      });
    }
    res.status(200).json({
      status: "success",
      message: "Carga atualizada com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao atualizar carga.",
      data: null,
    });
  }
};

endpointsFunction.deleteCarga = async (req, res) => {
  const { id } = req.params;
  try {
    const dados = await Carga.destroy({
      where: { id: id },
    });

    res.status(204).json({
      status: "success",
      message: "Carga apagada com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao apagar carga.",
      data: null,
    });
  }
};

module.exports = endpointsFunction;