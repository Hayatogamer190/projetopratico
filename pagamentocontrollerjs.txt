const { Pagamento } = require("../models");

const endpointsFunction = {};

endpointsFunction.getAllPagamentos = async (req, res) => {
  try {
    const dados = await Pagamento.findAll({
      include: 'veiculo_pagamento'
    });

    res.status(200).json({
      status: "success",
      message: "Lista de pagamentos.",
      data: dados,
    });
  } catch (error) {
    console.error("ERRO DETALHADO:", error); 
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao listar pagamentos.",
      data: null,
    });
  }
};

endpointsFunction.createPagamento = async (req, res) => {
  const { veiculo, tipo_de_pagamento, valor, data_vencimento, estado } = req.body;
  console.log( veiculo, tipo_de_pagamento, valor, data_vencimento, estado );
  try {
    const dados = await Pagamento.create({
      veiculo: veiculo,
      tipo_de_pagamento: tipo_de_pagamento,
      valor: valor,
      data_vencimento: data_vencimento,
      estado: estado
    });

    res.status(201).json({
      status: "success",
      message: "Pagamento criado com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(404).json({
      status: "error",
      message: "Ocorreu um erro ao criar pagamento.",
      data: null,
    });
  }
};

endpointsFunction.getPagamentoById = async (req, res) => {
  const { id } = req.params;
  try {
    const dados = await Pagamento.findOne({
      where: { id: id },
      include: 'veiculo_pagamento'
    });
    if (!dados) {
      return res.status(404).json({
        status: "error",
        message: "Pagamento não encontrado.",
      });
    }

    res.status(200).json({
      status: "success",
      message: "Pagamento encontrado com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao listar pagamento.",
      data: null,
    });
  }
};

endpointsFunction.updatePagamento = async (req, res) => {
  const { id } = req.params;
  const { veiculo, tipo_de_pagamento, valor, data_vencimento, estado } = req.body;

  try {
    const dados = await Pagamento.update(
      {
        veiculo: veiculo,
        tipo_de_pagamento: tipo_de_pagamento,
        valor: valor,
        data_vencimento: data_vencimento,
        estado: estado
      },
      {
        where: { id: id },
      }
    );
    if (!dados) {
      return res.status(404).json({
        status: "error",
        message: "Pagamento não encontrado.",
      });
    }
    res.status(200).json({
      status: "success",
      message: "Pagamento atualizado com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao atualizar pagamento.",
      data: null,
    });
  }
};

endpointsFunction.deletePagamento = async (req, res) => {
  const { id } = req.params;
  try {
    const dados = await Pagamento.destroy({
      where: { id: id },
    });

    res.status(204).json({
      status: "success",
      message: "Pagamento apagado com sucesso.",
      data: dados,
    });
  } catch (error) {
    res.status(500).json({
      status: "error",
      message: "Ocorreu um erro ao apagar pagamento.",
      data: null,
    });
  }
};

module.exports = endpointsFunction;