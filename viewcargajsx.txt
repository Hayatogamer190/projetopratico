import { useEffect, useState, useContext } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Link } from 'react-router-dom';
import { AuthContext } from "../../contexts/AuthContext";
import axios from "axios";

const VerCarga = () => {

    const { id } = useParams();
    const [carga, setCarga] = useState([]);

    const { token } = useContext(AuthContext);

    useEffect(() => {
        if (id && token) {
            axios.get(`http://localhost:5000/api/v1/carga/${id}`, {
                headers: {
                    Authorization: token ? `Bearer ${token}` : undefined,
                },
            })
            .then((res) => {
                setCarga(res.data.data);
            })
            .catch(() => setError("Erro ao carregar dados do viagem."));
        }
    }, [id, token]);

    return (
        <>
            <div className="container py-4">
                <header className="d-flex justify-content-between align-items-center mb-4">
                    <h1 className="mb-0"><i className="bi bi-box-arrow-in-up"></i> Detalhes da Carga ID: <span className="text-primary">{carga.id} - ({carga.tipo_de_carga})</span></h1>
                    <a href="/cargas" className="btn btn-outline-secondary"><i className="bi bi-arrow-left-circle"></i> Voltar à Lista</a>
                </header>

                <div className="card shadow-sm">
                    <div className="card-header">
                        <h5 className="mb-0"><i className="bi bi-info-circle-fill"></i> Informações da Carga ID: {carga.id}</h5>
                    </div>
                    <div className="card-body">
                        <div className="row details-list">
                            <div className="col-md-6">
                                <dl className="row">
                                    <dt className="col-sm-5">Tipo de Carga:</dt>
                                    <dd className="col-sm-7">{carga.tipo_de_carga}</dd>

                                    <dt className="col-sm-5">Peso (kg):</dt>
                                    <dd className="col-sm-7">{carga.peso} kg</dd>

                                    <dt className="col-sm-5">Data da Carga:</dt>
                                    <dd className="col-sm-7">{carga.data_carga}</dd>

                                    <dt className="col-sm-5">Frequência:</dt>
                                    <dd className="col-sm-7">{carga.frequencia}</dd>
                                </dl>
                            </div>
                            <div className="col-md-6">
                                <dl className="row">
                                    <dt className="col-sm-5">Local de Origem:</dt>
                                    <dd className="col-sm-7">{carga.local_origem}</dd>

                                    <dt className="col-sm-5">Local de Destino:</dt>
                                    <dd className="col-sm-7">{carga.local_destino}</dd>
                                </dl>
                            </div>
                        </div>
                        <hr />
                        <div className="section-title">
                            <h5 className="mt-4"><i className="bi bi bi-truck"></i> Veículo Atribuído</h5>
                        </div>
                        {carga.veiculo_carga ? (
                            <ul className="list-group">
                                <li className="list-group-item">
                                    <div className="d-flex w-100 justify-content-between align-items-center">
                                        <div>
                                            <h6 className="mb-1">{carga.veiculo_carga.marca} {carga.veiculo_carga.modelo} ({carga.veiculo_carga.matricula})</h6>
                                            <small className="text-muted">Tipo: {carga.veiculo_carga.tipo}</small>
                                        </div>
                                        {
                                            carga.veiculo_carga.estado === 'Operacional' ? <span className="badge text-bg-success">Operacional</span> :
                                            carga.veiculo_carga.estado === 'Em Manutenção' ? <span className="badge text-bg-warning">Em Manutenção</span> :
                                            carga.veiculo_carga.estado === 'Vendido' ? <span className="badge text-bg-secondary">Vendido</span> :
                                            carga.veiculo_carga.estado === 'Fora de Serviço' ? <span className="badge text-bg-danger">Fora de Serviço</span> :
                                            carga.veiculo_carga.estado === 'Abatido' ? <span className="badge text-bg-dark">Abatido</span> :
                                            <span className="badge text-bg-light">Desconhecido</span>
                                        }
                                    </div>
                                </li>
                            </ul>
                        ) : (
                            <div className="alert alert-info" role="alert">
                                Este carga não tem nenhum veículo atribuído.
                            </div>
                        )}
                    </div>
                    <div className="card-footer text-end">
                        <Link
                            to={`/carga/edit/${carga.id}`}
                            className="btn btn-primary"
                            title="Editar">
                                <i className="bi bi-pencil-fill"></i> Editar Carga
                        </Link>
                    </div>
                </div>
            </div>
        </>
    )
}

export default VerCarga;